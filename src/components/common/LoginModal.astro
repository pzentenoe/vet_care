---
import { login, currentUser } from '@stores/authStore';
---

<div id="login-modal" class="login-modal fixed inset-0 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-lg shadow-xl p-6 w-full max-w-md">
        <div class="flex justify-between items-center mb-4">
            <h3 class="text-2xl font-bold text-gray-800">Iniciar Sesión</h3>
            <button id="close-login-modal" class="text-gray-500 hover:text-gray-700">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <form id="login-form" class="space-y-4">
            <div id="login-error-message" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative">
                <span id="error-text">Error en el inicio de sesión</span>
            </div>
            <div>
                <label for="email" class="block text-sm font-medium text-gray-700">Correo electrónico</label>
                <input type="email" id="email" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
            </div>
            <div>
                <label for="password" class="block text-sm font-medium text-gray-700">Contraseña</label>
                <input type="password" id="password" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500">
            </div>
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <input id="remember-me" name="remember-me" type="checkbox" class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                    <label for="remember-me" class="ml-2 block text-sm text-gray-700">Recordarme</label>
                </div>
                <div class="text-sm">
                    <a href="#" class="font-medium text-blue-600 hover:text-blue-500">¿Olvidaste tu contraseña?</a>
                </div>
            </div>
            <div>
                <button type="submit" class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    Iniciar Sesión
                </button>
            </div>
        </form>
        <div class="mt-4 text-center text-sm">
            <p class="text-gray-600">¿No tienes una cuenta? <a href="#" class="font-medium text-blue-600 hover:text-blue-500">Regístrate</a></p>
        </div>
    </div>
</div>

<script>
// Código del lado del cliente para manejar el login
import { login, currentUser } from '@stores/authStore';

// Declarar la propiedad en la interfaz Window
declare global {
    interface Window {
        openLoginModal: () => void;
    }
}

// Abrir modal
function openLoginModal() {
    const loginModal = document.getElementById('login-modal');
    loginModal?.classList.remove('hidden');
}

// Cerrar modal
function closeLoginModal() {
    const loginModal = document.getElementById('login-modal');
    loginModal?.classList.add('hidden');
    
    // Limpiar el formulario
    const loginForm = document.getElementById('login-form') as HTMLFormElement;
    loginForm?.reset();
    
    // Ocultar mensaje de error
    const errorMessage = document.getElementById('login-error-message');
    errorMessage?.classList.add('hidden');
}

// Event listeners
document.addEventListener('DOMContentLoaded', () => {
    // Cerrar modal con botón X
    const closeButton = document.getElementById('close-login-modal');
    closeButton?.addEventListener('click', closeLoginModal);
    
    // Manejar envío del formulario
    const loginForm = document.getElementById('login-form');
    loginForm?.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const emailInput = document.getElementById('email') as HTMLInputElement;
        const passwordInput = document.getElementById('password') as HTMLInputElement;
        const errorMessage = document.getElementById('login-error-message');
        const errorText = document.getElementById('error-text');
        
        const email = emailInput?.value || '';
        const password = passwordInput?.value || '';
        
        // Validación simple
        if (!email || !password) {
            errorMessage?.classList.remove('hidden');
            if (errorText) errorText.textContent = 'Por favor ingresa tu correo y contraseña';
            return;
        }
        
        try {
            const result = await login(email, password);
            
            if (result.success) {
                closeLoginModal();
                // Redirigir según el rol
                const user = currentUser.get();
                if (user?.role === 'admin' || user?.role === 'vet') {
                    window.location.href = '/fichas-clinicas';
                } else {
                    window.location.href = '/perfil';
                }
            } else {
                errorMessage?.classList.remove('hidden');
                if (errorText) errorText.textContent = result.error || 'Error en el inicio de sesión';
            }
        } catch (error) {
            errorMessage?.classList.remove('hidden');
            if (errorText) errorText.textContent = 'Error al conectar con el servicio';
        }
    });
    
    // Cerrar modal si se hace clic fuera de él
    window.addEventListener('click', (e) => {
        const loginModal = document.getElementById('login-modal');
        if (e.target === loginModal) {
            closeLoginModal();
        }
    });
});

// Exportar función para que pueda ser usada por otros componentes
window.openLoginModal = openLoginModal;
</script>